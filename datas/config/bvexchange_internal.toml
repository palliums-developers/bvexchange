transactions = 4

traceback_limit = 4

#db logging echo(False, True) default: False
db_echo=false

#v2b max replay exchange count(state = faild)
v2b_maxtimes = 99

#syncing proof flag ; default true
syncing_mod = false

#connect btc chain config
[btc_conn]
    user = "btc"
    password = "btc"
    host = "127.0.0.1"
    port = 8066
    domain = "violaslayer"
    server = "violaslayer"

#connect ethereum chain config
[[ethereum_nodes]]
    host = "https://kovan.infura.io/v3/2645261bd8844d0c9ac042c84606502d"
    name = "ethereum 1"

#connect violas chain config
[[violas_nodes]]
    host = "52.27.228.84"
    port = 50001
    name = "violas 1"
    faucet = "mint_test.key"

[[violas_nodes]]
    host = "18.220.66.235"
    port = 50001
    name = "violas 4"
    faucet = "mint_test.key"

[[violas_nodes]]
    host = "13.68.141.242"
    port = 50001
    name = "violas 2"
    faucet = "mint_test.key"

[[violas_nodes]]
    host = "47.52.195.50"
    port = 50001
    name = "violas 3"
    faucet = "mint_test.key"

#connect libra chain config
[[libra_nodes]]
    host = "http://client.testnet.libra.org"
    name = "libra"

[[violas_servers]]
    host = "52.27.228.84"
    port = 4000
    user = "violas"
    password = "violas"

#redis db connect config. this is default config,
#append db_list for specific value
[db_default]
    host = "127.0.0.1"
    port = 6378
    password = "violas"
    step = 100

[[db_list]]
    db = "lfilter"
    step = 300

[[db_list]]
    db = "vfilter"
    step = 200

[[db_list]]
    db = "bfilter"
    step = 30

[[db_list]]
    db = "efilter"
    step = 1

[[db_list]]
    db = "record"

#ethereum contract for mapping erc20 token
[ethereum_tokens]
    [ethereum_tokens.vlsmproof]
        address = "0xCb9b6D30E26d17Ce94A30Dd225dC336fC4536FE8"
        support= true  

# tokens info 
# token_info.tokens chain support token. ex. token_info.tokens.violas is violas chain support token
# token_info.tokens.CHAIN_NAME.token is chain token
# token_info.tokens.CHAIN_NAME.mtoken is chain mapping token for thd chain. only violas 
#
# token_info.mapping is two chain token mapping. ex violas-USD <-> libra-Coin1
# token_info.mapping.token is chain token, value is token path CHAIN_NAME.TOKEN
# token_info.mapping.mtoken is violas mapping token for thd chain, value is token path CHAIN_NAME.TOKEN
[token_info]
    [token_info.tokens]
        [token_info.tokens.violas]
            token = ["VLSUSD", "VLSEUR", "VLSSGD", "VLSGBP"] 
            mtoken = ["BTC", "USD", "USDT"]
        [token_info.tokens.libra]
            token = ["Coin1"]
        [token_info.tokens.ethereum]
            token = ["usdt"]
        [token_info.tokens.btc]
            token = ["BTC"]

    [[token_info.mapping]]
        token = "libra.Coin1"
        mtoken = "violas.USD"
    [[token_info.mapping]]
        token = "btc.BTC"
        mtoken = "violas.BTC"
    [[token_info.mapping]]
        token = "ethereum.usdt"
        mtoken = "violas.USDT"

#violas <-> libra token map
#violas coin:VLSAAA map to libra coin:BBB:  VLSAAA(violas chain) -uniswap-> LBRBBB(violas chain) -map-> BBB(libra chain)
#libra coin map:AAA to violas coin:VLSBBB:  AAA(libra chain) -map-> LBRAAA(violas chain) -uniswap-> VLSBBB(violas chain)
#btc map violas coin: 
#violas btcbtc coin map btc coin:

#
#type : metadata's type; token is violas/libra token
#ttoken : target chain stable token(Violas stable token, BTC, Ethereum erc20 token)
#support   : type is support #default = true
#run    : execute analysis proof and exchange, default false
#etype  : map or swap(default)
[type_opts]
    [type_opts.v2lusd]
        ttoken = "Coin1"
        support= true  
    [type_opts.v2leur]
        ttoken = "Coin2"
        support= false
        run    = true
    [type_opts.l2vusd]
        ttoken = "VLSUSD"
        run    = true
    [type_opts.l2veur]
        ttoken = "VLSEUR"
    [type_opts.l2vsgd]
        ttoken = "VLSSGD"
    [type_opts.l2vgbp]
        ttoken = "VLSGBP"
    [type_opts.b2vusd]
        ttoken = "VLSUSD"
    [type_opts.b2veur]
        ttoken = "VLSEUR"
    [type_opts.b2vsgd]
        ttoken = "VLSSGD"
    [type_opts.b2vgbp]
        ttoken = "VLSGBP"
    [type_opts.b2lusd]
        ttoken = "Coin1"
        support= false
    [type_opts.b2leur]
        ttoken = "Coin2"
        support= false
    [type_opts.l2b]
        ttoken = "BTC"
        support = false
    [type_opts.v2b]
        ttoken = "BTC"
    [type_opts.v2bm]
        etype  = "map"
    [type_opts.v2lm]
        etype  = "map"
    [type_opts.l2vm]
        etype  = "map"
    [type_opts.b2vm]
        etype  = "map"
    [type_opts.v2vswap]
        support= true  
    [type_opts.v2em]
        etype  = "map"
    [type_opts.e2vm]
        etype  = "map"

#btc opt code (state = start), web interface for auto-create
[type_code]
    b2vm    = "0x3000"
    b2vusd  = "0x4000"
    b2veur  = "0x4010"
    b2vsgd  = "0x4020"
    b2vgbp  = "0x4030"

[swap_module]
    #AssocRoot: 0000000000000000000000000a550c18
    #TreasuryCompliance: 0000000000000000000000000b1e55ed
    #address = "10dfbe77f8a09e9dfcb77bb3d44a14fc"
    address = "00000000000000000000000000000001"

[swap_owner]
    address = "00000000000000000000000045584348"

#swap rule:
#  thd chain ->(map) violas chain : x2vm--- . ex l2vm is libra token to map violas token(usd)
#  violas chain ->(map) thd chain : v2xm--- . ex v2lm is violas token to map libra token(coin1)
#  thd chain -> violas chain : x2v--- . ex l2vusd is libra token to swap violas token(usd)
#  violas chain -> thd chain : v2x--- . ex v2lusd is violas token to swap libra token(coin1)
#  l2vusd:
#     case 1: Coin1/Coin2 -> vlsusd  
#             a. libra transaction: send coinX to address_list.receiver.address(type = l2vusd and chain = "libra")
#             b. bs(bvexchange server) get transaction(type = l2vusd and receiver = a.address) info(amount toaddress ex..)
#             c. bs get address(address_list.sender.address(type = l2vusd and chain = "violas"))
#             d. bs mint map-token(name = usd  amount = b.amount)
#             e. bs execute swap to vlsusd and designated address(b.toaddress)
#             f. bs change transaction state to end(libra transaction and use a.address)
#  v2lusd:
#     case 1: vlsusd/vlseur/vlssgd/vlsgbp -> Coin1
#             a. violas transaction: send vlsXXX to address_list.receiver.address(type = v2lusd and chain = "violas")
#             b. bs get transaction(type = v2lusd and receiver = a.address) info(amount toaddress ex..)
#             c. bs get address_list.combine.address(type = v2lusd and chain = "violas") for swap use to receiver usd token
#             d. bs execute swap, if succeed , get c.address token(usd) changed amount.
#             e. libra transaction: send Coin1 to b.toaddress(amount = d.amount)
#             f. bs change transaction state to end(violas transaction and use a.address)
#             g. bs burn c.address's changed token(usd , amount)
#
# note:
#  1. swap server is single thread(one-token -> one-token), so receiver is multi, but traget token only one address, 
#     in this configure, we can work multi thread(every-type has only one thread)
#  2. libra chain has't swap, so can use the same address(testnet mod), maybe transaction will failed(libra support multi thread 
#     for thread???), anyway wo first ignore it for fast work
#  3. combine address must be difference, because we will calaculation swap result with combine address's token changed
#  4. address_list.sender.address(type = X2vXXX and chain = "violas") must be difference, because we will execute mint token to it
#     and execute swap function with this address. 
#  5. ethereum chain's receiver is main contract, so set map address for contract address for change state
[address_list]
    #receiver addresses
    ##violas chain receiver address
    [[address_list.receiver]]
        address = "546f9c996dd049e1a9a2e11d0d001c42e69a3adef1ace4d9c1551e5415e71a4c"
        type = "v2b"
        chain = "violas"

    [[address_list.receiver]]
        address = "7cd40d7664d5523d360e8a1e0e2682a2dc49a7c8979f83cde4bc229fb35fd27f"
        type = "v2lusd"
        chain = "violas"
    
    [[address_list.receiver]]
        address = "a239632a99a92e38eeade27b5e3023e22ab774f228b719991463adf0515688a9"
        type = "v2leur"
        chain = "violas"

    ##btc chain receiver address
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2v"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vusd"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2veur"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vsgd"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vgbp"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2lusd"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2leur"
        chain = "btc"
    ##libra chain receiver address
    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vusd"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2veur"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vgbp"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vsgd"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vm"
        chain = "libra"

    [[address_list.receiver]]
        address = "81d0e3818e6ffda1336b7b2aff9496b7148cea4f3ea38d2b602dc8997592fe79"
        type = "v2lm"
        chain = "violas"

    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vm"
        chain = "btc"
    [[address_list.receiver]]
        address = "eda54651162270ccc0ff81cbcfffcded8ee2a1a52bd868c0baadb0d226731832"
        type = "v2bm"
        chain = "violas"

    [[address_list.receiver]]
        address = "0xCb9b6D30E26d17Ce94A30Dd225dC336fC4536FE8"
        type = "e2vm"
        chain = "ethereum"

    [[address_list.receiver]]
        address = "cf0861291d97a2fd8d781fc162afc6ed181d90a6e37619829bb70afaf28b5edf"
        type = "v2em"
        chain = "violas"

    #sender address
    ##send btc
    [[address_list.sender]]
        address = "7d572ec38dd124ad4faec3fc077217efab88cc9dd86f72d8816b3cabf155eb86"
        type = "b2vm"
        chain = "violas"

    ##send btc
    [[address_list.sender]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "v2b"
        chain = "btc"

    [[address_list.sender]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "v2bm"
        chain = "btc"

    [[address_list.sender]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "l2b"
        chain = "btc"
    ##send violas tokens
    [[address_list.sender]]
        address = "a6c512b59c7e2501ebe2556259e345444036899620db1efcbe2a8301ed00a842"
        type = "l2vm"
        chain = "violas"

    [[address_list.sender]]
        address = "ea6649bcbe1377106201f3829902748278a69a80e181f0c4eefff64a589883aa"
        type = "l2vusd"
        chain = "violas"

    [[address_list.sender]]
        address = "15abf1617d7dd113dd86a7c8ba93dc8841e9a2834bd51cbb0d51a18a8bc75ae4"
        type = "l2veur"
        chain = "violas"

    [[address_list.sender]]
        address = "8f713a7908d15e0745cb997761eeb9ec0c1fcbc4b88106c2e00159da6e5d3ad1"
        type = "l2vgbp"
        chain = "violas"

    [[address_list.sender]]
        address = "4a73cfd0365c641341a7a3bc376423480a82179351b8ecb6c5e68ab7b08622de"
        type = "l2vsgd"
        chain = "violas"

    [[address_list.sender]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "v2lm"
        chain = "libra"

    [[address_list.sender]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "v2lusd"
        chain = "libra"

    [[address_list.sender]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "v2leur"
        chain = "libra"

    [[address_list.sender]]
        address = "98cd4e572f88b780e485a187fd8088d831ff3012cef45601b1e2abf670d619e5"
        type = "b2vusd"
        chain = "violas"

    [[address_list.sender]]
        address = "47535b0273d05a3689680409b18c76db4a5d8ad92880cf11fcbed74310b67bfc"
        type = "b2veur"
        chain = "violas"

    [[address_list.sender]]
        address = "ed997d48192d313deda1d0335722a9bf231bded0afc5ff71c3882b4865cc2f0b"
        type = "b2vsgd"
        chain = "violas"

    [[address_list.sender]]
        address = "607586552150ab702006dd1731f0a9169326aa2ff707002c6bab92b8c8fd4dd3"
        type = "b2vgbp"
        chain = "violas"
    [[address_list.sender]]
        address = "de8eeb09d629940e46c757b6727c7b1e1554b8e40c8a8a949b1db67168980c57"
        type = "e2vm"
        chain = "violas"

    [[address_list.sender]]
        address = "0x89fF4a850e39A132614dbE517F80603b4A96fa0A"
        type = "v2em"
        chain = "ethereum"

    #combine 
    [[address_list.combine]]
        address = "c16af35c8082f78399bedabfd1ec8c409334bb5e39e5919e081b6db72482e139"
        type = "v2lusd"
        chain = "violas"
    [[address_list.combine]]
        address = "c62da985e679fa642f51f84f694be65a8d3b6ca4b293491b63adf1dfc9754a33"
        type = "v2leur"
        chain = "violas"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "l2b"
        chain = "btc"
    [[address_list.combine]]
        address = "c8a39b68308f01fe8f1921be4635f76ae8f5ebfc0aebd0d7bf8c94a992a16038"
        type = "v2b"
        chain = "violas"
    [[address_list.combine]]
        address = "785bc36d0cc97aa3fef3c583625578717701909c5685e581533295bc590c7190"
        type = "l2b"
        chain = "violas"
    [[address_list.combine]]
        address = "ef616009536a480e2c99cae448f76fad611f77b0370184e4399e270a71691da5"
        type = "b2lusd"
        chain = "violas"
    [[address_list.combine]]
        address = "ae7bb57a3a90ef6d60043c4ef39724027c76503930423b76098cf75a22941e5a"
        type = "b2leur"
        chain = "violas"
    [[address_list.combine]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vm"
        chain = "btc"
    [[address_list.combine]]
        address = "2N9fQcit5KB8vJHmBF5Z4DkUUTCgJA8GKb3"
        type = "b2vusd"
        chain = "btc"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "b2veur"
        chain = "btc"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "b2vsgd"
        chain = "btc"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "b2vgbp"
        chain = "btc"

    [[address_list.map]]
        address = "0x89fF4a850e39A132614dbE517F80603b4A96fa0A"
        type = "e2vm"
        chain = "ethereum"

#thread loopping sleep time(s)
[looping_sleep]
    vfilter = 1
    lfilter = 1
    bfilter = 1
    comm = 8
