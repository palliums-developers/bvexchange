transactions = 4

traceback_limit = 4

#db logging echo(False, True) default: False
db_echo=false

#v2b max replay exchange count(state = faild)
v2b_maxtimes = 99

[btc_conn]
    user = "btc"
    password = "btc"
    host = "127.0.0.1"
    port = 8066
    domain = "violaslayer"
    server = "violaslayer"

[[violas_nodes]]
    host = "52.27.228.84"
    port = 50001
    name = "violas 1"
    faucet = "mint_test.key"

[[violas_nodes]]
    host = "13.68.141.242"
    port = 50001
    name = "violas 2"
    faucet = "mint_test.key"

[[violas_nodes]]
    host = "47.52.195.50"
    port = 50001
    name = "violas 3"
    faucet = "mint_test.key"

[[violas_nodes]]
    host = "18.220.66.235"
    port = 50001
    name = "violas 4"
    faucet = "mint_test.key"

[[libra_nodes]]
    host = "http://client.testnet.libra.org"
    name = "libra"

[[violas_servers]]
    host = "52.27.228.84"
    port = 4000
    user = "violas"
    password = "violas"

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "test"
    password = "violas"
    step = 100

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "lfilter"
    password = "violas"
    step = 100

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "vfilter"
    password = "violas"
    step = 300

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "bfilter"
    password = "violas"
    step = 500

#b2v/v2b proof db
[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "v2b"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2v"
    password = "violas"
    step = 500

#l2vxxx proof db
[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "l2vusd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "l2veur"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "l2vsgd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "l2vgbp"
    password = "violas"
    step = 500

#v2lxxx proof db
[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "v2lusd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "v2leur"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "v2lsgd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "v2lgbp"
    password = "violas"
    step = 500

#b2vxxx proof db
[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2vusd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2veur"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2vsgd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2vgbp"
    password = "violas"
    step = 500

#l2b proof db
[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "l2b"
    password = "violas"
    step = 500

#b2lxxx proof db
[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2lusd"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "b2leur"
    password = "violas"
    step = 500

[[db_list]]
    host = "127.0.0.1"
    port = 6378
    db = "record"
    password = "violas"
    step = 500

#violas <-> libra token map
#violas coin:VLSAAA map to libra coin:BBB:  VLSAAA(violas chain) -uniswap-> LBRBBB(violas chain) -map-> BBB(libra chain)
#libra coin map:AAA to violas coin:VLSBBB:  AAA(libra chain) -map-> LBRAAA(violas chain) -uniswap-> VLSBBB(violas chain)
#btc map violas coin: 
#violas btcbtc coin map btc coin:

#
#type : metadata's type; token is violas/libra token
#stoken : target chain stable token
#mtoken : violas chain map token only from violas chain swap use this field
#mtoken : stoken = 1:1
[type_token]
    [type_token.v2lusd]
        stoken= "Coin1"
        mtoken = "USD"
    [type_token.v2leur]
        stoken = "Coin2"
        mtoken = "EUR"
    [type_token.l2vusd]
        stoken = "VLSUSD"
    [type_token.l2veur]
        stoken = "VLSEUR"
    [type_token.l2vsgd]
        stoken = "VLSSGD"
    [type_token.l2vgbp]
        stoken = "VLSGBP"
    [type_token.b2vusd]
        stoken = "VLSUSD"
    [type_token.b2veur]
        stoken = "VLSEUR"
    [type_token.b2vsgd]
        stoken = "VLSSGD"
    [type_token.b2vgbp]
        stoken = "VLSGBP"
    [type_token.b2lusd]
        stoken = "Coin1"
        mtoken = "USD"
    [type_token.b2leur]
        stoken = "Coin2"
        mtoken = "EUR"
    [type_token.l2b]
        stoken = "BTC"
        mtoken = "BTC"
    [type_token.v2b]
        stoken = "BTC"
        mtoken = "BTC"

[swap_module]
    #AssocRoot: 0000000000000000000000000a550c18
    #TreasuryCompliance: 0000000000000000000000000b1e55ed
    #address = "10dfbe77f8a09e9dfcb77bb3d44a14fc"
    address = "00000000000000000000000000000001"

[swap_owner]
    address = "0000000000000000000000000a550c18"

#swap rule:
#  thd chain -> violas chain : x2v--- . ex l2vusd is libra token to swap violas token(usd)
#  violas chain -> thd chain : v2x--- . ex v2lusd is violas token to swap libra token(coin1)
#  l2vusd:
#     case 1: Coin1/Coin2 -> vlsusd  
#             a. libra transaction: send coinX to address_list.receiver.address(type = l2vusd and chain = "libra")
#             b. bs(bvexchange server) get transaction(type = l2vusd and receiver = a.address) info(amount toaddress ex..)
#             c. bs get address(address_list.sender.address(type = l2vusd and chain = "violas"))
#             d. bs mint map-token(name = usd  amount = b.amount)
#             e. bs execute swap to vlsusd and designated address(b.toaddress)
#             f. bs change transaction state to end(libra transaction and use a.address)
#  v2lusd:
#     case 1: vlsusd/vlseur/vlssgd/vlsgbp -> Coin1
#             a. violas transaction: send vlsXXX to address_list.receiver.address(type = v2lusd and chain = "violas")
#             b. bs get transaction(type = v2lusd and receiver = a.address) info(amount toaddress ex..)
#             c. bs get address_list.combine.address(type = v2lusd and chain = "violas") for swap use to receiver usd token
#             d. bs execute swap, if succeed , get c.address token(usd) changed amount.
#             e. libra transaction: send Coin1 to b.toaddress(amount = d.amount)
#             f. bs change transaction state to end(violas transaction and use a.address)
#             g. bs burn c.address's changed token(usd , amount)
#
# note:
#  1. swap server is single thread(one-token -> one-token), so receiver is multi, but traget token only one address, 
#     in this configure, we can work multi thread(every-type has only one thread)
#  2. libra chain has't swap, so can use the same address(testnet mod), maybe transaction will failed(libra support multi thread 
#     for thread???), anyway wo first ignore it for fast work
#  3. combine address must be difference, because we will calaculation swap result with combine address's token changed
#  4. address_list.sender.address(type = X2vXXX and chain = "violas") must be difference, because we will execute mint token to it
#     and execute swap function with this address. 
[address_list]
    #receiver addresses
    ##violas chain receiver address
    [[address_list.receiver]]
        address = "4f93ec275410e8be891ff0fd5da41c43aee27591e222fb466654b4f983d8adbb"
        type = "v2b"
        chain = "violas"

    [[address_list.receiver]]
        address = "7cd40d7664d5523d360e8a1e0e2682a2dc49a7c8979f83cde4bc229fb35fd27f"
        type = "v2lusd"
        chain = "violas"
    
    [[address_list.receiver]]
        address = "a239632a99a92e38eeade27b5e3023e22ab774f228b719991463adf0515688a9"
        type = "v2leur"
        chain = "violas"

    ##btc chain receiver address
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2v"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vusd"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2veur"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vsgd"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2vgbp"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2lusd"
        chain = "btc"
    [[address_list.receiver]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "b2leur"
        chain = "btc"
    ##libra chain receiver address
    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vusd"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2veur"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vgbp"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2vsgd"
        chain = "libra"

    [[address_list.receiver]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "l2b"
        chain = "libra"

    #sender address
    ##send btc
    [[address_list.sender]]
        address = "7d572ec38dd124ad4faec3fc077217efab88cc9dd86f72d8816b3cabf155eb86"
        type = "b2v"
        chain = "violas"

    ##send btc
    [[address_list.sender]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "v2b"
        chain = "btc"

    [[address_list.sender]]
        address = "2N2YasTUdLbXsafHHmyoKUYcRRicRPgUyNB"
        type = "l2b"
        chain = "btc"
    ##send violas tokens
    [[address_list.sender]]
        address = "ea6649bcbe1377106201f3829902748278a69a80e181f0c4eefff64a589883aa"
        type = "l2vusd"
        chain = "violas"

    [[address_list.sender]]
        address = "15abf1617d7dd113dd86a7c8ba93dc8841e9a2834bd51cbb0d51a18a8bc75ae4"
        type = "l2veur"
        chain = "violas"

    [[address_list.sender]]
        address = "8f713a7908d15e0745cb997761eeb9ec0c1fcbc4b88106c2e00159da6e5d3ad1"
        type = "l2vgbp"
        chain = "violas"

    [[address_list.sender]]
        address = "4a73cfd0365c641341a7a3bc376423480a82179351b8ecb6c5e68ab7b08622de"
        type = "l2vsgd"
        chain = "violas"

    [[address_list.sender]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "v2lusd"
        chain = "libra"

    [[address_list.sender]]
        address = "da4250b95f4d7f82d9f95ac45ea084b3c5e53097c9f82f81513d02eeb515ecce"
        type = "v2leur"
        chain = "libra"

    [[address_list.sender]]
        address = "98cd4e572f88b780e485a187fd8088d831ff3012cef45601b1e2abf670d619e5"
        type = "b2vusd"
        chain = "violas"

    [[address_list.sender]]
        address = "47535b0273d05a3689680409b18c76db4a5d8ad92880cf11fcbed74310b67bfc"
        type = "b2veur"
        chain = "violas"

    [[address_list.sender]]
        address = "ed997d48192d313deda1d0335722a9bf231bded0afc5ff71c3882b4865cc2f0b"
        type = "b2vsgd"
        chain = "violas"

    [[address_list.sender]]
        address = "607586552150ab702006dd1731f0a9169326aa2ff707002c6bab92b8c8fd4dd3"
        type = "b2vgbp"
        chain = "violas"
    #combine 
    [[address_list.combine]]
        address = "c16af35c8082f78399bedabfd1ec8c409334bb5e39e5919e081b6db72482e139"
        type = "v2lusd"
        chain = "violas"
    [[address_list.combine]]
        address = "c62da985e679fa642f51f84f694be65a8d3b6ca4b293491b63adf1dfc9754a33"
        type = "v2leur"
        chain = "violas"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "l2b"
        chain = "btc"
    [[address_list.combine]]
        address = "c8a39b68308f01fe8f1921be4635f76ae8f5ebfc0aebd0d7bf8c94a992a16038"
        type = "v2b"
        chain = "violas"
    [[address_list.combine]]
        address = "785bc36d0cc97aa3fef3c583625578717701909c5685e581533295bc590c7190"
        type = "l2b"
        chain = "violas"
    [[address_list.combine]]
        address = "ef616009536a480e2c99cae448f76fad611f77b0370184e4399e270a71691da5"
        type = "b2lusd"
        chain = "violas"
    [[address_list.combine]]
        address = "ae7bb57a3a90ef6d60043c4ef39724027c76503930423b76098cf75a22941e5a"
        type = "b2leur"
        chain = "violas"
    [[address_list.combine]]
        address = "2N9fQcit5KB8vJHmBF5Z4DkUUTCgJA8GKb3"
        type = "b2v"
        chain = "btc"
    [[address_list.combine]]
        address = "2N9fQcit5KB8vJHmBF5Z4DkUUTCgJA8GKb3"
        type = "b2vusd"
        chain = "btc"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "b2veur"
        chain = "btc"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "b2vsgd"
        chain = "btc"
    [[address_list.combine]]
        address = "2MyMHV6e4wA2ucV8fFKzXSEFCwrUGr2HEmY"
        type = "b2vgbp"
        chain = "btc"
#    #token info moudule <-> token_id: check token_is is valid.
#    [[address_list.token]]
#        address = "0000000000000000000000000000000000000000000000000000000000000000"
#        tokenid = "BTCBTC"
#        tokenname = "BTCBTC"
#        type = "v2b"
#        chain = "violas"
#
#    [[address_list.token]]
#        address = "0000000000000000000000000000000000000000000000000000000000000000"
#        tokenid = "LBRUSD"
#        tokenname = "LBRUSD"
#        type = "v2lusd"
#        chain = "violas"
#
#    [[address_list.token]]
#        address = "0000000000000000000000000000000000000000000000000000000000000000"
#        tokenid = "LBREUR"
#        tokenname = "LBREUR"
#        type = "v2leur"
#        chain = "violas"
#
#    [[address_list.token]]
#        address = "0000000000000000000000000000000000000000000000000000000000000000"
#        tokenid = "LBRSGD"
#        tokenname = "LBRSGD"
#        type = "v2lSGD"
#        chain = "violas"
#
#    [[address_list.token]]
#        address = "0000000000000000000000000000000000000000000000000000000000000000"
#        tokenid = "LBRGBP"
#        tokenname = "LBRGBP"
#        type = "v2lgbp"
#        chain = "violas"
#
[looping_sleep]
    v2b = 1
    b2v = 1
    v2l = 1
    l2v = 1
    vfilter = 1
    lfilter = 1
    v2bproof = 1
    v2lproof 1
    comm = 8
